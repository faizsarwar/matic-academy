{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: () => import(\n  /* webpackChunkName: \"about\" */\n  '../views/AboutView.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n    next({\n      name: 'login',\n      query: {\n        to: to.path\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"sources":["/home/faiz/Anas-Defy/juni-app/matic-academy/src/router/index.js"],"names":["createRouter","createWebHistory","routes","path","name","component","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","meta","requireLogin","store","state","isAuthenticated","query"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AAEA,MAAMC,MAAM,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAE,MAAM;AAAO;AAAgC,0BAAvC;AAHnB,CADW,CAAf;AAUA,MAAMC,MAAM,GAAGN,YAAY,CAAC;AACxBO,EAAAA,OAAO,EAAEN,gBAAgB,CAACO,OAAO,CAACC,GAAR,CAAYC,QAAb,CADD;AAExBR,EAAAA;AAFwB,CAAD,CAA3B;AAMEI,MAAM,CAACK,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;AACpC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgBC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,YAAtC,KAAuD,CAACC,KAAK,CAACC,KAAN,CAAYC,eAAxE,EAAyF;AACvFR,IAAAA,IAAI,CAAC;AAAEV,MAAAA,IAAI,EAAE,OAAR;AAAiBmB,MAAAA,KAAK,EAAE;AAAEX,QAAAA,EAAE,EAAEA,EAAE,CAACT;AAAT;AAAxB,KAAD,CAAJ;AACD,GAFD,MAEO;AACLW,IAAAA,IAAI;AACL;AACF,CAND;AAQA,eAAeR,MAAf","sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n\nconst routes = [\n    {\n      path: '/',\n      name: 'home',\n      component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n    },\n]  \n\n\n\nconst router = createRouter({\n    history: createWebHistory(process.env.BASE_URL),\n    routes\n  })\n  \n  \n  router.beforeEach((to, from, next) => {\n    if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n      next({ name: 'login', query: { to: to.path } });\n    } else {\n      next()\n    }\n  })\n  \n  export default router\n  "]},"metadata":{},"sourceType":"module"}